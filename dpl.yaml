---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gohelloapp
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      k8s-app: gohelloapp
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: gohelloapp
        k8s-app: gohelloapp
    spec:
      containers:
        - name: gohello
          image: >-
            harbor.test.harbor.local/library/gohelloapp:latest
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 5
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      automountServiceAccountToken: true
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gohelloappweb
  namespace: default
spec:
  ingressClassName: traefik
  rules:
    - host: gohelloapp.web
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: gohelloapp-web
                port:
                  number: 80

---
apiVersion: v1
kind: Service
metadata:
  name: gohelloapp-web
  namespace: default
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http
  selector:
    app.kubernetes.io/name: gohelloapp

# apiVersion: v1
# kind: Service
# metadata:
#   name: longhorn-frontend
#   namespace: longhorn-system
#   uid: 84bb4268-fb70-429f-ad87-d041a94df689
#   resourceVersion: '2223'
#   creationTimestamp: '2023-04-06T12:56:45Z'
#   labels:
#     app: longhorn-ui
#     app.kubernetes.io/instance: longhorn
#     app.kubernetes.io/managed-by: Helm
#     app.kubernetes.io/name: longhorn
#     app.kubernetes.io/version: v1.4.1
#     helm.sh/chart: longhorn-1.4.1
#   annotations:
#     meta.helm.sh/release-name: longhorn
#     meta.helm.sh/release-namespace: longhorn-system
#   managedFields:
#     - manager: helm
#       operation: Update
#       apiVersion: v1
#       time: '2023-04-06T12:56:45Z'
#       fieldsType: FieldsV1
#       fieldsV1:
#         f:metadata:
#           f:annotations:
#             .: {}
#             f:meta.helm.sh/release-name: {}
#             f:meta.helm.sh/release-namespace: {}
#           f:labels:
#             .: {}
#             f:app: {}
#             f:app.kubernetes.io/instance: {}
#             f:app.kubernetes.io/managed-by: {}
#             f:app.kubernetes.io/name: {}
#             f:app.kubernetes.io/version: {}
#             f:helm.sh/chart: {}
#         f:spec:
#           f:internalTrafficPolicy: {}
#           f:ports:
#             .: {}
#             k:{"port":80,"protocol":"TCP"}:
#               .: {}
#               f:name: {}
#               f:port: {}
#               f:protocol: {}
#               f:targetPort: {}
#           f:selector: {}
#           f:sessionAffinity: {}
#           f:type: {}
#   selfLink: /api/v1/namespaces/longhorn-system/services/longhorn-frontend
# status:
#   loadBalancer: {}
# spec:
#   ports:
#     - name: http
#       protocol: TCP
#       port: 80
#       targetPort: http
#   selector:
#     app: longhorn-ui
#   clusterIP: 10.99.165.108
#   clusterIPs:
#     - 10.99.165.108
#   type: ClusterIP
#   sessionAffinity: None
#   ipFamilies:
#     - IPv4
#   ipFamilyPolicy: SingleStack
#   internalTrafficPolicy: Cluster
